let rippleInterval = null;
let currentPosition = null;
let centerDot = null;

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á ripple
const createSingleRipple = () => {
  if (!currentPosition) return;

  const point = map.latLngToContainerPoint(currentPosition);

  const ripple = document.createElement('div');
  ripple.className = 'ripple-effect';
  ripple.style.left = `${point.x}px`;
  ripple.style.top = `${point.y}px`;

  map.getContainer().appendChild(ripple);

  setTimeout(() => {
    if (ripple.parentNode) {
      ripple.parentNode.removeChild(ripple);
    }
  }, 1500);
};

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏¢‡∏∏‡∏î ripple ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
const stopRipples = () => {
  clearInterval(rippleInterval);
  rippleInterval = null;

  if (centerDot && centerDot.parentNode) {
    centerDot.parentNode.removeChild(centerDot);
    centerDot = null;
  }
  currentPosition = null;
};

// ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
map.on('click', (e) => {
  stopRipples();

  currentPosition = e.latlng;

  const point = map.latLngToContainerPoint(currentPosition);

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏à‡∏∏‡∏î‡∏Å‡∏•‡∏≤‡∏á
  centerDot = document.createElement('div');
  centerDot.className = 'ripple-center-dot';
  centerDot.style.left = `${point.x}px`;
  centerDot.style.top = `${point.y}px`;
  map.getContainer().appendChild(centerDot);

  // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ß‡∏á ripple ‡πÉ‡∏´‡∏°‡πà
  rippleInterval = setInterval(createSingleRipple, 1000);
  createSingleRipple();
});

// ‡∏õ‡∏∏‡πà‡∏°‡∏´‡∏¢‡∏∏‡∏î ripple
document.getElementById('stopRippleBtn').addEventListener('click', stopRipples);

// ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Spacebar ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏¢‡∏∏‡∏î ripple ‡∏î‡πâ‡∏ß‡∏¢
document.addEventListener('keydown', (e) => {
  if (e.code === 'Space') {
    stopRipples();
  }
});


// ‡πÅ‡∏™‡∏î‡∏á popup ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å
function showCoordinatePopup(latlng) {
    const lat = latlng.lat.toFixed(6);
    const lng = latlng.lng.toFixed(6);
    const gmapLink = `https://www.google.com/maps/dir/${lat},${lng}`;

    const popupContent = `
        <div style="font-size: 13px;">
            <strong>Lat:</strong> ${lat}<br>
            <strong>Lng:</strong> ${lng}<br>
            <a href="${gmapLink}" target="_blank">üîó ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ô Google Maps</a><br>
            <button onclick="navigator.clipboard.writeText('${lat},${lng}')">üìã ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏û‡∏¥‡∏Å‡∏±‡∏î</button><br>
        </div>
    `;

    L.popup()
        .setLatLng(latlng)
        .setContent(popupContent)
        .openOn(map);
}

// ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏Ç‡∏ß‡∏≤
map.on('contextmenu', function(e) {
    showCoordinatePopup(e.latlng);
});

// ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏Ñ‡πâ‡∏≤‡∏á‡∏ô‡∏≤‡∏ô 2 ‡∏ß‡∏¥
let holdTimeout = null;

map.on('mousedown', function(e) {
    holdTimeout = setTimeout(() => {
        showCoordinatePopup(e.latlng);
    }, 2000);
});

map.on('mouseup', function() {
    clearTimeout(holdTimeout);
});

function updateCenterDotPosition() {
  if (!currentPosition || !centerDot) return;
  const point = map.latLngToContainerPoint(currentPosition);
  centerDot.style.left = `${point.x}px`;
  centerDot.style.top = `${point.y}px`;
}
// ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏ã‡∏π‡∏° ‡πÉ‡∏´‡πâ‡∏Ç‡∏¢‡∏±‡∏ö centerDot ‡∏ï‡∏≤‡∏°
map.on('move', updateCenterDotPosition);
map.on('zoom', updateCenterDotPosition);
