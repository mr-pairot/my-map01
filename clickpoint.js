let rippleInterval = null;
let currentPosition = null;
let centerDot = null;

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á ripple ‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß
function createSingleRipple() {
  if (!currentPosition) return;
  const point = map.latLngToContainerPoint(currentPosition);

  const ripple = document.createElement('div');
  ripple.className = 'ripple-effect';
  ripple.style.left = `${point.x}px`;
  ripple.style.top = `${point.y}px`;
  map.getContainer().appendChild(ripple);

  setTimeout(() => {
    ripple.remove();
  }, 1500);
}

// ‡πÄ‡∏£‡∏¥‡πà‡∏° ripple ‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á latlng ‡πÅ‡∏•‡∏∞‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß
function startRippleEffect(latlng, options = {}) {
  stopRipples(); // ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏¥‡∏°

  const { interval = 1000 } = options;
  currentPosition = latlng;

  const point = map.latLngToContainerPoint(currentPosition);
  centerDot = document.createElement('div');
  centerDot.className = 'ripple-center-dot';
  centerDot.style.left = `${point.x}px`;
  centerDot.style.top = `${point.y}px`;
  map.getContainer().appendChild(centerDot);

  rippleInterval = setInterval(createSingleRipple, interval);
  createSingleRipple();
}

// ‡∏´‡∏¢‡∏∏‡∏î ripple ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
function stopRipples() {
  clearInterval(rippleInterval);
  rippleInterval = null;

  if (centerDot?.parentNode) {
    centerDot.parentNode.removeChild(centerDot);
    centerDot = null;
  }

  currentPosition = null;
}

// ‡πÅ‡∏™‡∏î‡∏á popup ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å
function showCoordinatePopup(latlng) {
  const lat = latlng.lat.toFixed(6);
  const lng = latlng.lng.toFixed(6);
  const gmapLink = `https://www.google.com/maps/dir/${lat},${lng}`;

  const popupContent = `
    <div style="font-size: 13px;">
      <strong>Lat:</strong> ${lat}<br>
      <strong>Lng:</strong> ${lng}<br>
      <a href="${gmapLink}" target="_blank">üîó ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ô Google Maps</a><br>
      <button onclick="navigator.clipboard.writeText('${lat},${lng}')">üìã ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏û‡∏¥‡∏Å‡∏±‡∏î</button><br>
    </div>
  `;

  L.popup()
    .setLatLng(latlng)
    .setContent(popupContent)
    .openOn(map);
}

// ‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á dot ‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô/‡∏ã‡∏π‡∏°
function updateCenterDotPosition() {
  if (!currentPosition || !centerDot) return;
  const point = map.latLngToContainerPoint(currentPosition);
  centerDot.style.left = `${point.x}px`;
  centerDot.style.top = `${point.y}px`;
}
map.on('move', updateCenterDotPosition);
map.on('zoom', updateCenterDotPosition);

// ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ã‡πâ‡∏≤‡∏¢
map.on('click', (e) => {
  startRippleEffect(e.latlng, { interval: 1200 });
});

// ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏Ç‡∏ß‡∏≤
map.on('contextmenu', function(e) {
    startRippleEffect(e.latlng, { interval: 500 });
    showCoordinatePopup(e.latlng);
});

// ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏Ñ‡πâ‡∏≤‡∏á‡∏ô‡∏≤‡∏ô 2 ‡∏ß‡∏¥
let holdTimeout = null;

map.on('mousedown', function(e) {
    holdTimeout = setTimeout(() => {
        startRippleEffect(e.latlng, { interval: 500 });
        showCoordinatePopup(e.latlng);
    }, 2000);
});

map.on('mouseup', function() {
    clearTimeout(holdTimeout);
});

